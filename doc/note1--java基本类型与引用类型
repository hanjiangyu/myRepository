/*String类型*/
String类型的问题值得看一万遍，9.23从string中删除"\\"时又犯了错误，ss.replace("\\","")是错的，String sss = ss.replace("\\","")
才是对的。

String.length() 返回字符串长度，无论数字英文还是汉字

String类型初始化是双引号“”，char类型初始化是单引号‘’

对于三者使用的总结：
1.如果要操作少量的数据用 = String
2.单线程操作字符串缓冲区 下操作大量数据 = StringBuilder
3.多线程操作字符串缓冲区 下操作大量数据 = StringBuffer



/*基本数据类型与它们的包装类*/
java有8种基本数据类型，而针对每个基本数据类型，又有一个包装类与之对应。
声明list<Character>要写包装类。

基本类型本身只能描述数据类型，是不会让数据具有“对象”的属性与方法的。而包装类型是具备对象的特征。比如
int a1 = 0;
Integer a2= null;
上述a1只是描述类型，a1不是对象，存在栈区;a2则是一个对方，可以a2.方法()

boolean是基本数据类型,Boolean是它的封装类，和其他类一样，有属性有方法，可以new，例如：
Boolean flag = new Boolean("true");  // boolean 则不可以！
Boolean 是boolean 的实例化对象类，和Integer对应int一样
自jdk1.5.0以上版本后，Boolean在"赋值"和判断上和boolean一样，
即是你： boolean b1 = true ; 或者 Boolean b2 = true ; 都可以。
唯一只能使用Boolean上的就是从列表或者哈希表获取值时。
比如 boolean t = false;
Map map = new HashMap();
map.put("t", t);
那么获取值时只能用
Boolean t1 = (Boolean) map.get(t); //前面只能用Boolean强制转换，不能使用boolean.



/*json*/
json简单说就是javascript中的对象和数组，所以这两种结构就是对象和数组两种结构，通过这两种结构可以表示各种复杂的结构
1、对象：对象在js中表示为“{}”括起来的内容，数据结构为 {key：value,key：value,...}的键值对的结构，在面向对象的语言中，key为对
象的属性，value为对应的属性值，所以很容易理解，取值方法为 对象.key 获取属性值，这个属性值的类型可以是 数字、字符串、数组、对象几种。
2、数组：数组在js中是中括号“[]”括起来的内容，数据结构为 ["java","javascript","vb",...]，取值方式和所有语言中一样，使用索引获
取，字段值的类型可以是 数字、字符串、数组、对象几种。

json/jsonobject/string/jsonarray这四种类型:
JSONObject继承map，JsonArray继承list
JSONArray：相当于List<Object>
JSONObject：相当于Map<String, Object>